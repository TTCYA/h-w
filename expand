def type(args):
    space_line = 0
    comment_line = 0
    code_line = 0
    try:
        with open(args,‘r‘,encoding=‘UTF-8‘) as file:
            mark_flag = False            # 双引号标记
            block_comment_flag = False   # 块注释标记
            for line in file.readlines():
                line_comment_flag = False    # 行注释标记
                code_num = 0    # 行代码字符数
                slash = False
                asterisk = False
                for char in line:
                    if char !=  ‘ ‘:
                        if block_comment_flag == False and line_comment_flag == False:
                            # 不处于注释中时记录代码字符个数
                            code_num += 1
                        if char == ‘\"‘ and not block_comment_flag:
                            # 当当前的字符不处于一条注释中时，对字符串进行判定
                            if mark_flag:
                                # 如果字符串已开始，结束字符串
                                mark_flag = False
                            else:
                                # 否则开始一个字符串，置标记为真
                                mark_flag = True
                        elif char == ‘/‘ and not mark_flag and not block_comment_flag:
                            # 当当前不处于字符串和块注释中，对注释进行判定
                            if not slash:
                                slash = True
                            else:
                                # 当前一个字符为一个斜杠，说明此时开始了一个行注释
                                line_comment_flag = True
                                #  前面计数器将两个斜杠记为代码字符，应减去避免统计错误
                                code_num -= 2
                        elif slash and char == ‘*‘ and not mark_flag:
                            # 当当前不处于字符串时，判断一个块注释
                            block_comment_flag = True
                            code_num -= 2
                        elif block_comment_flag and char == ‘*‘:
                            # 判断在块注释中是否出现一个星号
                            asterisk = True
                        elif asterisk:
                            if char == ‘/‘:
                                # 结束一个块注释，并将其最后一行作为行注释处理
                                block_comment_flag = False
                                line_comment_flag = True
                if code_num > 1:
                    # 若当前行代码字符超过1视为代码行
                    code_line += 1
                else:
                    if block_comment_flag or line_comment_flag:
                        comment_line += 1
                    else:
                        space_line += 1
        return ‘代码行：‘+str(code_line)+‘\n注释行：‘+str(comment_line)+‘\n空行:‘+str(space_line)
    except FileNotFoundError:
        return ‘找不到该文件‘
